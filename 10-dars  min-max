# 1) N natural soni va n ta sonlar to'plami berilgan. Kiritilgan to'plamdagi eng katta va
#    eng kichik sonni topuvchi programma tuzilsin.

N = int(input("Nechta son kiritmoqchisiz:  "))
i = 1
min = max = int(input(str(1)+') '))
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if a > max:
        max = a
    if a < min:
        min = a
print('min =',min,'  max =',max)



# 2) N natural soni va n ta to'g'ri burchakli to'rtburchak tomonlarining (a,b) to'plami berilgan.
#    Kiritilgan to'plamdagi eng kichik yuzali to'rtburchakni topuvchi programma tuzilsin.

N = int(input("Nechta to'g'ri to'rtburchakning tomonlarini kiritmoqchisiz: "))
i = 1
a = int(input(str(i)+')  a = '))
b = int(input("    b = "))
yuz = a * b
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+')  a = '))
    b = int(input("    b = "))
    if yuz > a*b:
        yuz = a*b
        A = a;  B = b
print("Eng kichik yuza   a =",A,"  b =",B,"  yuzi =",yuz)



# 3) N natural soni va n ta to'g'ri burchakli to'rtburchak tomonlarining (a,b) to'plami berilgan.
#    Kiritilgan to'plamdagi eng katta perimetrli to'rtburchakni topuvchi programma tuzilsin.

N = int(input("Nechta to'g'ri to'rtburchakning tomonlarini kiritmoqchisiz: "))
i = 1
a = int(input(str(i)+')  a = '))
b = int(input("    b = "))
P = 2*(a + b)
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+')  a = '))
    b = int(input("    b = "))
    if P < 2*(a+b):
        P = 2*(a+b)
        A = a;  B = b
print("Eng katta perimetr   a =",A,"  b =",B,"  Perimetr =",P)



# 4) N natural soni va n ta sonlar to'plami berilgan. Kiritilgan to'plamdagi eng kichik
#    element o'rnini aniqlovchi programma tuzilsin.

N = int(input("Nechta son kiritmoqchisiz:  "))
i = 1
orni = i
min = int(input(str(i)+') '))
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if min > a:
        min = a
        orni = i
print("Eng kichik son:",min," O'rni:",orni)



# 5) N natural soni va n ta (m,v) sonlar juftligi to'plami berilgan (m-og'irlik, v-hajm). Kiritilgan
#    to'plamdagi eng katta zichlikni aniqlovchi programma tuzilsin. Zichlik-o'g'irilikni hajmga nisbatiga teng.

N = int(input("Nechta (m,v) sonlar juftligini kiritmoqchisiz: "))
i = 1
m = int(input(str(i)+')  m = '))
v = int(input("    v = "))
P = m / v
while N != 1:
    N -= 1
    i += 1
    m = int(input(str(i)+')  m = '))
    v = int(input("    v = "))
    if P < m / v:
        P = m / v
        M = m;  V = v
print("Eng katta zichlik  ("+str(m)+","+str(v)+')'," m =",m,"  v =",v, "  Zichlik =",m/v)



# 6) N natural soni va N ta butun sondan iborat to'plam berilgan. Birinchi uchragan eng kichik
#    va oxirgi uchragan eng katta element tartib raqamini aniqlovchi programma tuzilsin.

N = int(input("N = "))
min = max = int(input(str(1)+') '))
max_t_raqam = min_t_raqam = 1
i = 1
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if max <= a:
        max = a
        max_t_raqam = i
    if min > a:
        min = a
        min_t_raqam = i
print("Birinchi uchragan eng kichik elementning tartib raqami:",min_t_raqam)
print("Oxirgi uchragan eng katta elementning tartib raqami:",max_t_raqam)



