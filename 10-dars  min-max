# 1) N natural soni va n ta sonlar to'plami berilgan. Kiritilgan to'plamdagi eng katta va eng kichik sonni topuvchi programma tuzilsin.

N = int(input("Nechta son kiritmoqchisiz:  "))
i = 1
min = max = int(input(str(1)+') '))
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if a > max:
        max = a
    if a < min:
        min = a
print('min =',min,'  max =',max)



# 2) N natural soni va n ta to'g'ri burchakli to'rtburchak tomonlarining (a,b) to'plami berilgan.
#    Kiritilgan to'plamdagi eng kichik yuzali to'rtburchakni topuvchi programma tuzilsin.

N = int(input("Nechta to'g'ri to'rtburchakning tomonlarini kiritmoqchisiz: "))
i = 1
a = int(input(str(i)+')  a = '))
b = int(input("    b = "))
yuz = a * b
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+')  a = '))
    b = int(input("    b = "))
    if yuz > a*b:
        yuz = a*b
        A = a;  B = b
print("Eng kichik yuza   a =",A,"  b =",B,"  yuzi =",yuz)



# 3) N natural soni va n ta to'g'ri burchakli to'rtburchak tomonlarining (a,b) to'plami berilgan.
#    Kiritilgan to'plamdagi eng katta perimetrli to'rtburchakni topuvchi programma tuzilsin.

N = int(input("Nechta to'g'ri to'rtburchakning tomonlarini kiritmoqchisiz: "))
i = 1
a = int(input(str(i)+')  a = '))
b = int(input("    b = "))
P = 2*(a + b)
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+')  a = '))
    b = int(input("    b = "))
    if P < 2*(a+b):
        P = 2*(a+b)
        A = a;  B = b
print("Eng katta perimetr   a =",A,"  b =",B,"  Perimetr =",P)



# 4) N natural soni va n ta sonlar to'plami berilgan. Kiritilgan to'plamdagi eng kichik
#    element o'rnini aniqlovchi programma tuzilsin.

N = int(input("Nechta son kiritmoqchisiz:  "))
i = 1
orni = i
min = int(input(str(i)+') '))
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if min > a:
        min = a
        orni = i
print("Eng kichik son:",min," O'rni:",orni)



# 5) N natural soni va n ta (m,v) sonlar juftligi to'plami berilgan (m-og'irlik, v-hajm). Kiritilgan
#    to'plamdagi eng katta zichlikni aniqlovchi programma tuzilsin. Zichlik-o'g'irilikni hajmga nisbatiga teng.

N = int(input("Nechta (m,v) sonlar juftligini kiritmoqchisiz: "))
i = 1
m = int(input(str(i)+')  m = '))
v = int(input("    v = "))
P = m / v
while N != 1:
    N -= 1
    i += 1
    m = int(input(str(i)+')  m = '))
    v = int(input("    v = "))
    if P < m / v:
        P = m / v
        M = m;  V = v
print("Eng katta zichlik  ("+str(m)+","+str(v)+')'," m =",m,"  v =",v, "  Zichlik =",m/v)



# 6) N natural soni va N ta butun sondan iborat to'plam berilgan. Birinchi uchragan eng kichik
#    va oxirgi uchragan eng katta element tartib raqamini aniqlovchi programma tuzilsin.

N = int(input("N = "))
min = max = int(input(str(1)+') '))
max_t_raqam = min_t_raqam = 1
i = 1
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if max <= a:
        max = a
        max_t_raqam = i
    if min > a:
        min = a
        min_t_raqam = i
print("Birinchi uchragan eng kichik elementning tartib raqami:",min_t_raqam)
print("Oxirgi uchragan eng katta elementning tartib raqami:",max_t_raqam)



# 7) N natural soni va N ta butun sondan iborat to'plam berilgan. Birinchi uchragan eng katta
#    va oxirgi uchragan eng kichik element tartib raqamini aniqlovchi programma tuzilsin.

N = int(input("N = "))
min = max = int(input(str(1)+') '))
max_t_raqam = min_t_raqam = 1
i = 1
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if max < a:
        max = a
        max_t_raqam = i
    if min >= a:
        min = a
        min_t_raqam = i
print("Birinchi uchragan eng katta elementning tartib raqami:",max_t_raqam)
print("Oxirgi uchragan eng kichik elementning tartib raqami:",min_t_raqam)



# 8) N natural soni va N ta butun sondan iborat to'plam berilgan. Birinchi va oxirgi 
#    uchragan eng kichik element tartib raqamini aniqlovchi programma tuzilsin.

N = int(input("N = "))
min = int(input(str(1)+') '))
min_t_raqam_1 = min_t_raqam_2 = 1
i = 1
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if min > a:
        min = a
        min_t_raqam_1 = i
    if min >= a:
        min = a
        min_t_raqam_2 = i
print("Birinchi uchragan eng kichik elementning tartib raqami:",min_t_raqam_1)
print("Oxirgi uchragan eng kichik elementning tartib raqami:",min_t_raqam_2)



# 9) N natural soni va N ta butun sondan iborat to'plam berilgan. Birinchi va oxirgi 
#    uchragan eng katta element tartib raqamini aniqlovchi programma tuzilsin.

N = int(input("N = "))
max = int(input(str(1)+') '))
max_t_raqam_1 = max_t_raqam_2 = 1
i = 1
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if max < a:
        max = a
        max_t_raqam_1 = i
    if max <= a:
        max = a
        max_t_raqam_2 = i
print("Birinchi uchragan eng katta elementning tartib raqami:",max_t_raqam_1)
print("Oxirgi uchragan eng katta elementning tartib raqami:",max_t_raqam_2)



# 10) N natural soni va N ta butun sondan iborat to'plam berilgan. Birinchi uchragan ekstremal
#     element tartib raqamini aniqlovchi programma tuzilsin. Ekstremal element deb
#     eng katta va eng kichik elementga aytiladi.

N = int(input('N = '))
mini = maxi = int(input(str(1)+') '))
mini_t_raqam = maxi_t_raqam = 1
i = 1
while N != 1:
    i += 1
    N -= 1
    a = int(input(str(i)+') '))
    if maxi < a:
        maxi = a
        maxi_t_raqam = i
    if mini > a:
        mini = a
        mini_t_raqam = i
print("Birinchi uchragan eng katta elementning tartib raqami:",maxi_t_raqam)
print("Birinchi uchragan eng kichik elementning tartib raqami:",mini_t_raqam)



# 11) N natural soni va N ta butun sondan iborat to'plam berilgan. Oxirgi uchragan ekstremal
#     element tartib raqamini aniqlovchi programma tuzilsin. Ekstremal element deb
#     eng katta va eng kichik elementga aytiladi.

N = int(input('N = '))
mini = maxi = int(input(str(1)+') '))
mini_t_raqam = maxi_t_raqam = 1
i = 1
while N != 1:
    i += 1
    N -= 1
    a = int(input(str(i)+') '))
    if maxi <= a:
        maxi = a
        maxi_t_raqam = i
    if mini >= a:
        mini = a
        mini_t_raqam = i
print("Oxirgi uchragan eng katta elementning tartib raqami:",maxi_t_raqam)
print("Oxirgi uchragan eng kichik elementning tartib raqami:",mini_t_raqam)



# 12) N natural soni berilgan va N ta butun sondan iborat to'plam berilgan. Eng kichik musbat
#     sonni aniqlovchi programma tuzilsin. Agar musbat son bo'lmasa nol chiqarilsin.

N = int(input("Nechta son kiritmoqchisiz: "))
x = True;  i = 0
while N != 0:
    N -= 1;  i += 1
    a = int(input(str(i)+') '))
    if a > 0  and  x == True:
        min = a
        x = False
    if a > 0  and  x == False:
        if a < min:
            min = a
if x == False:
    print("Eng kichik musbat son: ",min)
else:
    print(0)
        


# 13) N natural soni berilgan va N ta butun sondan iborat to'plam berilgan. Birinchi uchragan eng katta 
#     toq element tartib raqamini aniqlovchi programma tuzilsin. Agar toq son bo'lmasa nol chiqarilsin.

N = int(input("N = "))
x = True
i = 0
while N != 0:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if x == True  and  a % 2 == 1:
        maxi = a
        maxi_t_raqam = i
        x = False
    if x == False and a % 2 == 1 and maxi < a:
        maxi = a
        maxi_t_raqam = i
if x == False:
    print("Birinchi uchragan eng katta toq element:",maxi)
    print(maxi,"ning tartib raqami",maxi_t_raqam)
else:
    print(0)
    


# 14) B soni va 10 ta butun sondan tashkil topgan musbat sonlar to'plami berilgan. Shu to'plamda
#     B sonidan katta bo'lgan, eng kichik elementni tartib raqamini chiqaruvchi programma
#     tuzilsin. Agar berilgan to'plamda B sonidan katta son topilmasa, ikkita 0 chiqarilsin.

B = int(input('B = '))
print("10 ta musbat son kiriting")
x = True;   i = 0;  N = 10
while N != 0:
    N -= 1;  i += 1
    a = int(input(str(i)+') '))
    if a > 0 and x == True and a > B:
        min = a
        t_raqam = i
        x = False
    if a > 0 and x == False and a > B:
        if a < min:
            min = a
            t_raqam = i
if x == False:
    print(B,"dan katta eng kichik son: ",min)
    print(min,"sonining tartib raqami: ",t_raqam)
else:
    print('00')



# 15) B, C sonlari va 10 ta butun sondan tashkil topgan to'plam berilgan (0<B<C). Shu to'plamda
#     (B,C) oraliqdagi eng katta elementni tartib raqamini chiqaruvchi programma tuzilsin. Agar 
#     berilgan to'plamda (B,C) oraliqdagi son topilmasa, ikkita 0 chiqarilsin.

print("B va C ni kiriting (0<B<C)")
B = int(input('B = '))
C = int(input('C = '))
print("10 ta son kiriting")
x = True;  i = 0;  N = 10
while N != 0:
    N -= 1;  i += 1
    a = int(input(str(i)+') '))
    if x == True and B < a < C:
        max = a
        x = False
        t_raqam = i
    if x == False and B < a < C:
        if a > max:
            max = a
            t_raqam = i
if x == False:
    print(f"{B} va {C} orasidagi eng katta son: {max}")
    print(f"{max} ning tartib ratami: {t_raqam}")
else:
    print('00')



# 16) N natural soni va N ta butun sondan iborat to'plam berilgan. Birinchi uchragan eng
#     kichik elementgacha bo'lgan elementlar sonini aniqlovchi programma tuzilsin.

N = int(input('N = '))
i = 1
min = int(input(str(i)+') '))
e_soni = 0
while N != 1:
    N -= 1;  i += 1
    a = int(input(str(i)+') '))
    if min > a:
        min = a
        e_soni = i-1
print("Birinchi uchragan eng kichik element:",min)
print(min,"gacha bo'lgan elementlar soni:",e_soni)
    


# 17) N natural soni va N ta butun sondan iborat to'plam berilgan. Oxirgi uchragan eng katta 
#     elementdan keyin turgan elementlar sonini aniqlovchi programma tuzilsin.

N = int(input("Nechta son kiritmoqchisiz: "))
i = 1
e_soni = 0
max = int(input(str(i)+') '))
while N != 1:
    N -= 1;  i += 1
    a = int(input(str(i)+') '))
    if a >= max:    
        max = a
        e_soni = 0
    elif a < max:    
        e_soni += 1
print(f"Oxirgi uchragan eng katta element: {max} \n{max} dan keyin turgan elementlar soni: {e_soni}")



# 18) N natural soni va N ta butun sondan iborat to'plam berilgan. Birinchi va oxirgi uchragan eng
#     katta element orasida turgan elementlar sonini aniqlovchi programma tuzilsin. Agar to'plamda
#     faqat bitta eng katta element bo'lsa, nol chiqarilsin.

N = int(input("Nechta son kiritmoqchisiz: "))
i = 1
max1 = int(input(str(i)+') '))
e_soni_1 = i
e_soni_2 = i
while N != 1:
    N -= 1;  i += 1
    a = int(input(str(i)+') '))
    if max1 < a:
        max1 = a
        e_soni_1 = i
    if max1 <= a:
        max1 = a
        e_soni_2 = i
if e_soni_1 == e_soni_2:
    print(0)
elif e_soni_1 and e_soni_2:
    print(e_soni_2 - e_soni_1-1)

       

# 19) N natural soni va N ta butun sondan iborat to'plam berilgan. To'plamdagi eng
#     kichik elementlar sonini aniqlovchi programma tuzilsin.

N = int(input('N = '))
i = 1
mini = int(input(str(i)+') '))
e_soni = 1
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if mini > a:
        mini = a
        e_soni = 0
    if mini == a:
        e_soni += 1
print(e_soni)
    


# 20) N natural soni va N ta butun sondan iborat to'plam berilgan. To'plamdagi ekstremal elementlar
#     sonini aniqlovchi programma tuzilsin. Ekstremal element deb eng katta yoki eng kichik elementga aytiladi.

N = int(input('N = '))
i = 1
mini = maxi = int(input(str(i)+') '))
mini_soni = maxi_soni = 1
while N != 1:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if mini > a:
        mini = a
        mini_soni = 0
    if mini == a:
        mini_soni += 1
    if maxi < a:
        maxi = a
        maxi_soni = 0
    if maxi == a:
        maxi_soni += 1
print("Eng kichik elementlar soni:",mini_soni)
print("Eng katta elementlar soni:",maxi_soni)



# 21) N natural soni va N ta butun sondan iborat to'plam berilgan (N>2). To'plamning o'rtacha
#     qiymatini aniqlovchi programma tuzilsin. O'rtacha qiymatni hisoblashda eng katta va eng 
#     kichik qiymatlar hisobga olinmasin. 

N = int(input("(N>2) N = "))
i = 1
n = N
if N > 2:
    s = min = max = int(input(str(i)+') '))
    min_soni = max_soni = 1
    while N != 1:
        N -= 1  
        i += 1
        a = int(input(str(i)+') '))
        s += a
        if max < a:
            max = a
            max_soni = 0
        if max == a:
            max_soni += 1
            
        if min > a:
            min = a
            min_soni = 0
        if min == a:
            min_soni += 1
            
    orta_qiymat = (s - (min * min_soni) - (max * max_soni)) / (n - min_soni - max_soni)
    print(orta_qiymat)

else:
    print("2 tadan ko'p son kiriting")



# 22) N natural soni va N ta butun sondan iborat to'plam berilgan (N>2). To'plamdagi eng kichik
#     2 ta qiymatni aniqlovchi programma tuzilsin.
#     Masalan: N=5; 1 2 3 4 5
#     Natija: 1 2

N = int(input("(N>2) N = "))

if N > 2:
    min1 = int(input(str(1)+') '))
    min2 = int(input(str(2)+') '))
    i = 2
    while N != 2:
        N -= 1
        i += 1
        a = int(input(str(i)+') '))
        if min1 >= min2 and min1 > a:
            min1 = a
        elif min1 < min2 and min2 > a:
            min2 = a
    print(min1,min2)
else:
    print("2 tadan ko'p son kiriting")



# 23) N natural soni va N ta butun sondan iborat to'plam berilgan (N>3). To'plamdagi eng katta
#     3 ta qiymatni aniqlovchi programma tuzilsin.
#     Masalan: N=5; 1 2 3 4 5
#     Natija: 5 4 3

N = int(input("N>3 N = "))

if N > 3:
    max1 = int(input(str(1)+') '))
    max2 = int(input(str(2)+') '))
    max3 = int(input(str(3)+') '))
    i = 3
    while N != 3:
        N -= 1
        i += 1
        a = int(input(str(i)+') '))
        if max1 <= max2 and max1 <= max3 and max1 < a:
            max1 = a
        elif max2 <= max1 and max2 <= max3 and max2 < a:
            max2 = a
        elif max3 <= max1 and max3 <= max2 and max3 < a:
            max3 = a
    print(max1,max2,max3)
else:
    print("3 tadan ko'p son kiriting")



# 24) N natural soni va N ta butun sondan iborat to'plam berilgan (N>1). Ikkita qo'shni son
#     yig'indisining eng katta qiymatni aniqlovchi programma tuzilsin.

N = int(input("(N>1) N = "))
if N > 1:
    bir = int(input(str(1)+') '))
    ikki = int(input(str(2)+') '))
    yigindi = bir + ikki
    i = 2
    while N != 2:
        N -= 1
        i += 1
        a = int(input(str(i)+') '))
        if a + ikki > yigindi:
            yigindi = a + ikki
            ikki = a
        else:
            ikki = a
    print(yigindi)
else:
    print("1 tadan ko'p son kiriting")
            


# 25) N natural soni va N ta butun sondan iborat to'plam berilgan (N>1). Ko'paytmasi eng
#     kichik bo'ladigan ikkita qo'shni element indekslarini aniqlovchi programma tuzilsin.

N = int(input("(N>1) N = "))
if N > 1:
    bir = int(input(str(1)+') '))
    ikki = int(input(str(2)+') '))
    kopaytma = bir * ikki
    i = 2
    indeks = 2
    while N != 2:
        N -= 1
        i += 1
        a = int(input(str(i)+') '))
        if a * ikki < kopaytma:
            kopaytma = a * ikki
            ikki = a
            indeks = i
        else:
            ikki = a
    print(indeks-1,'va',indeks)
else:
    print("1 tadan ko'p son kiriting")



# 26) N natural soni va N ta butun sondan iborat to'plam berilgan. To'plamda ketma-ket keladigan
#     juft elementlar maksimal sonini aniqlovchi programma tuzilsin. Agar to'plamda juft sonlar
#     bo'lmasa, 0 chiqarilsin.

N = int(input("N = "))
i = 0
k = 0
b = 0
while N != 0:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if a % 2 == 0:
        k += 1
        if k > b:
            b = k
    else:
        k = 0
print("Ketma-ket kelgan juft elementlar maksimal soni:",b)



# 27) N natural soni va n ta nol va birdan iborat to'plam berilgan. Bir xil sonlar ketma-ketligi
#     eng uzun bo'ladigan oraliq boshlangan element indeksini va ketma-ketlikdagi elementlar
#     sonini aniqlovchi programma tuzilsin.

N = int(input("N = "))
i = 0
k = 0
d = 0
e_soni = 0
indeks = 0
while N != 0:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if a % 2 == 0:
        d = 0
        k += 1
        if k > e_soni:
            indeks = i - e_soni
            e_soni = k
    else:
        k = 0
        d += 1
        if d > e_soni:
            indeks = i - e_soni
            e_soni = d
print("Indeks:",indeks,"  Elementlar soni:",e_soni)



# 27) 2-usul

N = int(input("N = "))
i = 0
k = 0
d = 0
e_soni = 0
indeks = 0
while N != 0:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if a == 0:
        d = 0
        k += 1
        if k > e_soni:
            indeks = i - e_soni
            e_soni = k
    elif a == 1:
        k = 0
        d += 1
        if d > e_soni:
            indeks = i - e_soni
            e_soni = d
print("Indeks:",indeks,"  Elementlar soni:",e_soni)



# 28) N natural soni va N ta nol va birdan iborat to'plam berilgan. Bir soni ketma-ketligi eng uzun
#     bo'ladigan oraliq boshlangan element indeksini va ketma-ketlikdagi elementlar sonini
#     aniqlovchi programma tuzilsin.

N = int(input("N = "))
i = 0
k = 0
e_soni = 0
indeks = 0
while N != 0:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    if a == 1:
        k += 1
        if k > e_soni:
            indeks = i - e_soni
            e_soni = k
    else:
        k = 0
        
print("Indeks:",indeks,"  Elementlar soni:",e_soni)



# 29) N natural soni va N ta butun sondan iborat to'plam berilgan. To'plamdagi ketma-ket keladigan
#     eng kichik elementlarning maksimal sonini aniqlovchi programma tuzilsin.

N = int(input("N = "))
x = True
k = 0
i = 0
soni = 0
while N != 0:
    N -= 1
    i += 1
    a = int(input(str(i)+') '))
    
    if x == True:
        mini = a
        x = False
        
        
    if mini == a:
        k += 1
        if k > soni:
            soni = k
        
    elif mini > a:
        k = 1
        soni = 1
        mini = a
    
    else:
        k = 0

print(soni)
        


# 30) N natural soni va N ta butun sondan iborat to'plam berilgan. To'plamdagi ketma-ket
#     keladigan eng katta elementlarning minimal sonini aniqlovchi programma tuzilsin.

N = int(input("N = "))
x = True
y = True
i = 0
k = 0
soni = 0
while N > i:
    i += 1
    a = int(input(str(i)+') '))
    
    if x == True:
        maxi = a
        x = False
        
    if maxi == a:
        k += 1
        
    elif maxi < a:
        k = 1
        soni = 1
        maxi = a
        y = True
        
    else:
        if y == True:
            soni = k
            k = 0
            y = False
        elif k != 0 and k < soni:
            soni = k
            
            
    if N == i:
        if y == True:
            soni = k
            k = 0
            y = False
        elif k != 0 and k < soni:
            soni = k

print(soni)


