# 1) A va B butun musbat sonlar berilgan (A > B). A uzunlikdagi kesmada maksimal darajada B kesma joylashtirilgan. A kesmaning bo'sh qismini aniqlovchi programma tuzilsin.
#    Ko'paytirish va bo'lish amallarini ishlatmang.

A = int(input('A = '))
B = int(input('B = '))
s = 0
while A >= s:
    s += B
print(A - (s - B))



# 2) A va B butun musbat sonlar berilgan (A > B). A uzunlikdagi kesmada B kesmadan nechta joylashtirish mumkinligini aniqlovchi programma tuzilsin.
#    Ko'paytirish va bo'lish amallarini ishlatmang.

A = int(input('A = '))
B = int(input('B = '))
s = 0;  a = 0
while A >= s:
    s += B
    a += 1
print(a-1)



# 3) N va K butun musbat sonlar berilgan. Faqat ayirish va qo'shish amallarini ishlatib N sonini K soniga bo'lgandagi qoldiq va butun qismini aniqlovchi programma tuzilsin.

N = int(input('N = '))
K = int(input('K = '))
a = 0
while N >= 0:
    N -= K
    a += 1
print("Butun qism: ",a-1)
print("Qoldiq qism: ",N+K)



# 4) n butun soni berilgan (n>0). Agar n soni 3 ning darajasi bo'lsa "3-ning darajasi", aks holda "3-ning darajasi emas" degan natija chiqaruvchi programma tuzilsin.
#    Qoldiqli bo'lish va bo'lish amallarini ishlatmang.

n = int(input('n = '))
s = 0
i = 1
while n > s:
    s = 3**i
    i += 1
if n == 3**(i-1):
    print("3-ning darajasi")
else:
    print("3-ning darajasi emas")



# 5) 2 sonining qandaydir darajasini bildiruvchi n butun soni berilgan (n>0). n = 2**k  k ni aniqlovchi programma tuzilsin. 

n = int(input('n = '))
s = 0
k = 1
while n > s:
    s = 2**k
    k += 1
if n == 2**(k-1):
    print("k =",k-1)
else:
    print("2-ning darajasi emas")



# 6) n natural soni berilgan (n>0). Quydagi ifodani hisoblovchi programma tuzilsin:  n!! = n * (n-2) * (n-4) ...
#    Agar n juft bo'lsa oxirgi ko'paytuvchi 2, toq bo'lsa 1 bo'ladi

n = int(input('n = '))
s = 1
while n > 0:
    s *= n
    n -= 2
print(s)



# 7) n natural soni berilgan (n>0). Kvadrati n dan katta bo'ladigan eng kichchik butun k sonini  (k**2 > n) aniqlovchi programma tuzilsin. 
#   Ildizdan chiqaruvchi funksiyadan foydalanmang.

n = int(input('n = '))
s = 0
k = 1
while n >= s:
    s = k**2
    k += 1
print(k-1)



# 8) n natural soni berilgan (n>0). Kvadrati n dan katta bo'lmagan eng katta butun k sonini
#    (k**2 <= n) aniqlovchi programma tuzilsin. Ildizdan chiqaruvchi funksiyadan foydalanmang.

n = int(input('n = '))
s = 0
k = 1
while n > s:
    s = k**2
    k += 1
print(k-1)



# 9) n natural soni berilgan (n>1). 3**k > n shartni qanoatlantiruvchi eng kichik butun
#    k sonini aniqlovchi programma tuzilsin.

n = int(input('n = '))
k = 1
while n >= 3**k:
    k += 1
print(k)



# 10) n natural soni berilgan (n>0). Kvadrati n dan katta bo'lmagan eng katta butun k sonini
#    (3**k <= n) aniqlovchi programma tuzilsin. 

n = int(input('n = '))
k = 1
while n > 3**k:
    k += 1
print(k-1)



# 11) n natural soni berilgan (n>1). (1+2+3+..+k) >= n shart bajaradigan eng kichik k sonini
#     aniqlovchi programma tuzilsin. 1 dan k gacha bo'lgan yig'indi ham ekranga chiqarilsin.

n = int(input('n = '))
k = 1;  s = 0
while n > s:
    s += k
    k += 1
print("k =",k-1,"S =",s)



# 12) n natural soni berilgan (n>1). (1+2+3+..+k) <= n shart bajaradigan eng katta k sonini
#     aniqlovchi programma tuzilsin. 1 dan k gacha bo'lgan yig'indi ham ekranga chiqarilsin.

n = int(input('n = '))
k = 1;  s = k
while n >= s:
    k += 1
    s += k
    
print("k =",k-1,"S =",s-k)



# 13) a soni berilgan (a>1). (1 + 1/2 + 1/3 +...+ 1/k) >= a shart bajaradigan eng kichik k sonini 
#     aniqlovchi programma tuzilsin. Yig'indi ham ekranga chiqarilsin.

a = int(input('a = '))
k = 0; s = k
while a >= s:
    k += 1
    s += 1/k
print("k =",k,"s =",s)



# 14) a soni berilgan (a>1). (1 + 1/2 + 1/3 +...+ 1/k) <= a shart bajaradigan eng katta k sonini 
#     aniqlovchi programma tuzilsin. Yig'indi ham ekranga chiqarilsin.

a = int(input('a = '))
k = 0; s = k
while a > s:
    k += 1
    s += 1/k
print("k =",k-1,"s =",s-1/k)



# 15) Bankka boshlang'ich S so'm qo'yildi. Har oyda bor bo'lgan summa p foizga oshadi (0<p<25)
#     Necha oydan keyin boshlang'ich qiymat 2 martadan ko'p bo'lishini hisoblovchi programma tuzilsin.
#     Necha oy k - butun son. Bankda hosil bo'lgan summa haqiqiy son ekranga chiqarilsin.

s = float(input('s = '))
p = int(input('p = '))
a = s
k = 0
while s <= 2*a:
    k += 1
    s *= (1 + p/100)
print("s =",s,"k =",k)



# 16) Sportsmen birinchi kuni 10 km yugurib boshladi. Keyingi kunlari bir oldingi kunga nisbatan
#     p foiz ko'p yugurdi (0<p<50). Sportsmenning necha kundan keyin jami yugurgan masofasi
#     200 km dan oshadi? Jami kunlar soni va masofani (butun son) chiqaruvchi programma tuzilsin.

p = int(input('p = '))
s = 10
k = 0
while s < 200:
    s *= (1 + p/100)
    k += 1
print("s =",s,"kun =",k)



# 17) n va m butun sonlari berilgan (n>m). n sonini m soniga bo'lib butun va qoldiq
#     qismlarini bo'lish va qoldiqni olish amallarini ishlatmasdan topuvchi programma tuzilsin.

n = int(input('n = '))
m = int(input('m = '))
N = n;  a = 0;  b = 0
while N >= 0:
    N -= m
    a += 1
print("Butun qism: ",a-1,"\nQoldiq qism: ",N+m)



# 18) n butun soni berilgan (n>0). Bo'lib butun va qoldiq qismlarini aniqlash orqali,
#     berilgan son raqamlarini teskari tartibda chiqaruvchi programma tuzilsin.

n = int(input('n = '))
s = 0
while n != 0:
    s = s * 10 + n % 10
    n = n // 10
print(s)



# 19) n butun soni berilgan (n>0). Bo'lib butun va qoldiq qismlarini aniqlash orqali,
#     berilgan son raqamlari yig'indisini va raqamlari sonini chiqaruvchi programma tuzilsin.

n = int(input('n = '))
s = 0;  a = 0
while n != 0:
    s += n % 10
    a += 1
    n //= 10
print("Raqmlari yig'indisi: ",s,)
print("Raqmlari soni: ",a)



# 20) n butun soni berilgan (n>0). Bo'lib butun va qoldiq qismlarini aniqlash orqali,
#     berilgan son raqamlarining orasida 2 raqami bor-yo'qligini aniqlovchi programma tuzilsin.

n = int(input('n = '))
a = 0
while n != 0:
    if n % 10 == 2:
        a += 1
    n //= 10
print(a,"ta")



# 21) n butun soni berilgan (n>0). Bo'lib butun va qoldiq qismlarini aniqlash orqali,
#     berilgan son raqamlarining orasida toq raqamlar bor-yo'qligini aniqlovchi programma tuzilsin.

n = int(input('n = '))
a = 0
while n != 0:
    if n % 10 % 2 == 1:
        a += 1
    n //= 10
print(a,"ta toq son bor")



# 22) n butun soni berilgan (n>1). n sonini tub yoki tub emasligini aniqlovchi programma tuzilsin.

n = int(input('n = '))
a = 0;  b = n
while b != 0:
    if n % b == 0:
        a += 1
    b -= 1
if a == 2:
    print("tub son")
else:
    print("tub son emas")



# 23) a va b butun musbat sonlari berilgan. Berilgan sonlarning eng katta umumiy
#     bo'luvchisini aniqlovchi programma tuzilsin.   EKUB 

a = int(input('a = '))
b = int(input('b = '))

c = a;  e = b
if a >= b:
    while e != 0:
        if a % e == 0  and  b % e == 0:
            print('EKUB =',e)
            break
        else:
            e -= 1
else:
    while c != 0:
        if a % c == 0  and  b % c == 0:
            print('EKUB =',c)
            break
        else:
            c -= 1



# 24) n butun soni berilgan (n>1). n sonini Fibonachchi sonlari orasida bor-yo'qligini
#     aniqlovchi programma tuzilsin. Fibonachchi sonlari quydagi qonuniyat asosida topiladi.
#     F1 = 1;  F2 = 1;  Fk = F(k-1) + F(k-2);  k = 3,4,...

n = int(input('n = '))
F1, F2  = 1, 1 
while n >= F2:
    if n == F2:
        print(n,"- Fibonachchi soni")
        break
    F1, F2 = F2, F1 + F2
if n < F2:
    print(n,"- Fibonachchi soni emas")



# 25) n butun soni berilgan (n>1). n sonidan katta bo'lgan birinchi Fibonachchi sonini
#     aniqlovchi programma tuzilsin. 

n = int(input('n = '))
F1, F2  = 1, 1 
while n >= F2:
    F1, F2 = F2, F1 + F2
print(F2)



# 26) Fibonachchi soni bo'lgan n butun soni berilgan (n>1). n sonidan bir oldingi va bir
#     keyingi Fibonachchi sonlarini chiqaruvchi programma tuzilsin.

n = int(input('n = '))
F1, F2  = 1, 1 
while n >= F2:
    F1, F2 = F2, F1 + F2
if n == F1:
    print(F2-F1,F2)
else:
    print(F1,F2)



# 27) Fibonachchi soni bo'lgan n butun soni berilgan (n>1). n soni Fibonachchi ketma-ketligining
#     nechanchi xadi ekanini chiqaruvchi programma tuzilsin.

n = int(input('n = '))
F1 = F2 = 1;  a = 0
while n >= F2:
    F1, F2, = F2, F1 + F2
    a += 1
if n == F1:
    print(a+1,"- xadi")
else:
    print(n,"Fibonachchi soni emas")



# 28) e haqiqiy musbat soni berilgan. Ketma-ketlik hadlari quydagicha aniqlanadi.
#     a1 = 2;  ak = 2 + 1/(a(k-1));  k = 2,3,...
#     |ak - a(k-1)| < e shartni qanoatlantiruvchi eng kichik k sonini aniqlovchi programma tuzilsin.
#     ak va a(k-1) ham ekranga chiqarilsin.

e = float(input('e = '))
a1 = 2
a2 = 2 + 1 / a1
k = 2
while abs(a2 - a1) > e:
    k += 1
    a1 = a2
    a2 = 2 + 1 / a1
print("k =",k,"  ",a2,"  ",a1)



# 29) e haqiqiy musbat soni berilgan. Ketma-ketlik hadlari quydagicha aniqlanadi.
#     a1 = 1;  a2 = 2;  ak = (a(k-2) + 2*a(k-1))/3;  k = 3,4,...
#     |ak - a(k-1)| < e shartni qanoatlantiruvchi eng kichik k sonini aniqlovchi programma tuzilsin.
#     ak va a(k-1) ham ekranga chiqarilsin.

e = float(input('e = '))
a1 = 1
a2 = 2
ak = (a1 + 2*a2)/3
k = 3
while abs(a2 - ak) > e:
    k += 1
    a1 = a2
    a2 = ak
    ak = (a1 + 2*a2)/3
print("k =",k,"  ",ak,"  ",a2)



# 30) A, B, C musbat butun sonlari berilgan. A x B to'rtburchak ichida tomoni C bo'lgan
#     kvadratdan nechtasi sig'ishini aniqlovchi programma tuzilsin. Ko'paytirish va bo'lish
#     amallarini ishlatmang.

A = int(input('A = '))
B = int(input('B = '))
C = int(input('C = '))

a = 0;  b = 0

if A >= C and B >= C:
    while A >= C:
        A -= C
        a += 1
    while B >= C:
        B -= C
        b += 1
    s = 0
    while a != 0:
        s += b
        a -= 1
    print(s)
else:
    print("Tomoni",C,"ga teng bo'lgan kvadrat joylashtirib bo'lmaydi")
